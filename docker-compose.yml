version: '3.9'

services:
  postgres:
    image: postgres:13.2
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - 4000:4000
    volumes:
      - ./api:/app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      PORT: 4000
      NODE_ENV: development
    command: yarn start:dev
  
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./web:/web
      - /web/node_modules
    depends_on:
      api:
        condition: service_started
    environment:
      PORT: 3000
      NODE_ENV: development
      API_URL: http://api:4000/v1
    command: yarn start:dev